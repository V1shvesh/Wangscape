version: 0.1.{build}
image: Visual Studio 2015
configuration: Release
platform: x86
cache: packages
nuget:
  project_feed: true
before_build:
- cmd: >-
    del "C:\Program Files (x86)\MSBuild\14.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
    
    echo Restoring Nuget Packages

    nuget restore

    echo Fetching submodules

    git submodule update --init --recursive
    
    git clone -b appveyor-pyinstaller-package --single-branch https://github.com/Wangscape/Wangview.git
    
    git clone -b py2exe-package --single-branch https://github.com/serin-delaunay/Wangcheck.git

    cd lib\spotify-json

    echo Building spotify-json

    mkdir build32

    cd build32

    cmake .. -DBoost_NO_BOOST_CMAKE=TRUE -DBOOST_ROOT=../../../packages/boost.1.63.0.0/lib/native

    cmake --build . --config Release

    cd ..

    cd ..\..

    cd lib\libnoise

    echo Building libnoise

    mkdir build

    cd build

    cmake ..

    cmake --build . --config Release

    cd ..

    cd ..\..
build:
  project: Wangscape.sln
  verbosity: minimal
after_build:
- ps: >-
    $webclient = New-Object System.Net.WebClient
    
    $basedir = $pwd.Path + "\"
    
    $filepath = $basedir + "opengl32sw-32.7z"
    
    # Download and retry up to 3 times in case of network transient errors.
    
    $url = "http://download.qt.io/development_releases/prebuilt/llvmpipe/windows/opengl32sw-32.7z"
    
    $webclient.DownloadFile($url, $filepath)
    
    7z x opengl32sw-32.7z
    
    move opengl32sw.dll Release\opengl32.dll
    
    cd Wangview
    
    Set-Item Env:PYTHON "C:\Python34"
    
    C:package.bat
    
    cd ..
    
    cd Wangcheck
    
    Set-Item Env:PYTHON "C:\Python36"
    
    C:package.bat
    
    cd ..
    
    mkdir dist\Wangscape
    
    cd dist\Wangscape
    
    robocopy ..\.. . CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE README.md STYLE_GUIDE.md
    
    mkdir Wangscape
    
    robocopy Release dist\Wangscape Wangscape.exe WangscapeTest.exe noise.dll sfml-graphics-2.dll sfml-system-2.dll sfml-window-2.dll
    
    mkdir Wangview
    
    xcopy /s /i ..\..\Wangview\dist\ Wangview
    
    mkdir Wangcheck
    
    xcopy /s /i ..\..\Wangcheck\dist\ Wangcheck
    
    mkdir doc
    
    xcopy /s /i ..\..\doc doc
    
    cd ..
    
    7z a Wangscape.zip Wangscape
    
    cd ..
test_script:
- cmd: >-
    Release\WangscapeTest.exe --gtest_output=xml
    
    for /D %i in (doc\examples\*) do Wangcheck\build\exe.win32-3.5\Wangcheck.exe "%i/example_options.json" doc\schemas
    
    for /D %i in (doc\examples\*) do Release\Wangscape.exe "%i\example_options.json"
after_test:
- ps: >-
    $wc = New-Object 'System.Net.WebClient'

    $wc.UploadFile("https://ci.appveyor.com/api/testresults/xunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\test_detail.xml))
    
    mkdir example_output
    
    $folders = Get-ChildItem -Path doc/examples | ?{ $_.PSIsContainer }
    
    $folders | ForEach-Object {xcopy "doc/examples/$_/output" "example_output/$_"}

    7z a example_output.zip example_output
artifacts:
  - path: dist\Wangscape.zip
    name: Wangscape executable package
    type: zip
  - path: example_output.zip
    name: Example output
    type: zip
